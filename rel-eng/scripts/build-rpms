#!/usr/bin/env python3

import argparse
import os
import subprocess
import sys
import yaml

import utils


def build_rpms(config):
    """Build RPMs from SRPMs."""
    for platform in config['platforms']:
        mock_roots = config['platforms'][platform]
        srpm_dir = os.path.join(os.getcwd(), 'SRPMS', platform)
        rpm_dir = os.path.join(os.getcwd(), 'RPMS', platform)
        os.makedirs(rpm_dir, exist_ok=True)

        # Not all packages are built for all platforms so it's nice to just
        # check for SRPMs rather than depend on build ordering.
        srpms = [f for f in os.listdir(srpm_dir) if f.endswith('src.rpm')]
        for chroot in mock_roots:
            for package in config['external-deps']:
                package_prefix = package['name'] + '-' + package['version']
                srpm = [os.path.join(srpm_dir, p) for p in srpms if
                        p.startswith(package_prefix) and p.endswith('src.rpm')]
                if srpm:
                    build_rpm(chroot, rpm_dir, srpm[0], package, config)
                else:
                    print('Skipping {pkg} since no SRPM is present'.format(pkg=package['name']))

            for package in config['pulp-packages']:
                package_prefix = package['name'].replace('_', '-') + '-' + package['version']
                srpm = [os.path.join(srpm_dir, p) for p in srpms if
                        p.startswith(package_prefix) and p.endswith('src.rpm')]
                if srpm:
                    build_rpm(chroot, rpm_dir, srpm[0], package, config)
                else:
                    print('Skipping {pkg} since no SRPM is present'.format(pkg=package['name']))


def build_rpm(chroot, rpm_dir, srpm, package, config):
    """Build an RPM with Mock, installing RPMs specified in the config"""
    install_command = "mock -r {chroot} -i {rpms}"
    build_command = ("mock --no-clean -r {chroot} --resultdir {destination} {srpm}")

    # Unfortunately, some of our deps BuildRequire other deps we carry
    # so we have to install some previously built RPMs into the mock root.
    try:
        rpms = [f for f in os.listdir(rpm_dir) if
                f.endswith('rpm') and not f.endswith('src.rpm')]
        build_required_rpms = [os.path.join(rpm_dir, rpm) for rpm in rpms if
                               rpm.startswith(tuple(config['buildrequires']))]
        rpm_string = ' '.join(build_required_rpms)
        if build_required_rpms:
            install_command = install_command.format(chroot=chroot, rpms=rpm_string)
            print('Running "' + install_command + '"')
            subprocess.check_output(install_command, shell=True)
    except subprocess.CalledProcessError as e:
        print('Failed to install RPMs: \n' + str(e.output))

    try:
        build_command = build_command.format(chroot=chroot, destination=rpm_dir,
                                             srpm=srpm)
        subprocess.check_output(build_command, shell=True)
    except subprocess.CalledProcessError as e:
        print('Failed to build RPM: \n' + str(e.output))
        sys.exit(1)


parser = argparse.ArgumentParser(description='Build the RPMs for all Pulp projects and deps')
parser.add_argument('config', help='YAML file describing the versions of each project')
args = parser.parse_args()

build_rpms(utils.load_config(args.config))
